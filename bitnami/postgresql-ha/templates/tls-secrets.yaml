<<<<<<< HEAD
{{- if (include "postgresql-ha.createTlsSecret" . )}}
=======
{{- if (include "postgresql-ha.createTlsSecret" . ) }}
>>>>>>> ee2009506fa88a29a08be8ffce1bb6753a5ab4d0
{{- $ca := genCA "postgresql-ha-internal-ca" 365 }}
{{- $fullname := include "postgresql-ha.pgpool" . }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $serviceName := include "postgresql-ha.pgpool" . }}
{{- $altNames := list (printf "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) $fullname }}
{{- $crt := genSignedCert $fullname nil $altNames 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
<<<<<<< HEAD
  name: {{ include "postgresql-ha.pgpool" . }}-crt
=======
  name: {{ printf "%s-crt" (include "postgresql-ha.pgpool" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
>>>>>>> ee2009506fa88a29a08be8ffce1bb6753a5ab4d0
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $ca.Cert | b64enc | quote }}
  tls.crt: {{ $crt.Cert | b64enc | quote }}
  tls.key: {{ $crt.Key | b64enc | quote }}
{{- end }}
